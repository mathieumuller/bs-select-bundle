{% block choice_widget %}
    {% spaceless %}
        {% set search = selectpicker.live_search|default %}
        {% set multiselect = selectpicker.multiselect|default %}
        {% set isDateType = form.parent.vars.original_type|default in ["date", "time", "birthday"] %}

        {% if expanded %}
            {{ block('choice_widget_expanded') }}
        {% else %}
            {{ block('choice_widget_collapsed') }}
        {% endif %}
        {% if not isDateType %}
            <script>
                $("#{{ id }}").selectpicker({});

                $(document).ready(function(){
                    var inputId = "#{{ id }}";
                    var inputName = "{{ full_name }}";
                    var config  = {{ selectpicker|json_encode|raw }};
                    {% if search.ajax|default %}
                        AxiolabBootstrapSelect.initAjaxSearching(inputId, inputName, config);
                        $('body').on('changed.bs.select', inputId, function() {
                            $(inputId).closest('form').trigger('change');
                        });
                    {% endif %}
                });
            </script>
        {% endif %}
    {% endspaceless %}
{% endblock choice_widget %}

{% block choice_widget_collapsed %}
    {% spaceless %}
        {% set originalClass = attr.class|default ? attr.class : "" %}
        {% set selectPickerClass = 'form-control' %}
        {% if not isDateType %}
            {% set selectPickerClass = selectPickerClass ~ ' selectpicker' %}
            {% if selectpicker.show_tick|default %}
                {% set selectPickerClass = selectPickerClass ~ ' show-tick' %}
            {% endif %}
        {% endif %}

        {% set attr = attr|merge({'class': originalClass ~ " " ~ selectPickerClass}) %}
        <select
            {{ block('bsselect_widget_attributes') }}
            {% if multiple %} multiple="true"
                {% if multiselect.enabled|default %} multiple {% endif %}
                {% if multiselect.max_options|default %} data-max-options="{{ multiselect.max_options }}"{% endif %}
                {% if multiselect.selected_text_format|default %} data-selected-text-format="{{ multiselect.selected_text_format }}"{% endif %}
            {% endif %}
            {% if search.enabled|default %} data-live-search="true"{% endif %}
            {% if selectpicker.placeholder|default %} title="{{ selectpicker.placeholder|trans({}, translation_domain) }}"{% endif %}
            {% if selectpicker.style|default %} data-style="{{ selectpicker.style }}"{% endif %}
            {% if selectpicker.width|default %} data-width="{{ selectpicker.width }}"{% endif %}
            {% if selectpicker.max_size|default %} data-size="{{ selectpicker.max_size }}"{% endif %}
            data-container="body"
        >
            {% if empty_value is not none %}
                <option value="">{{ empty_value|trans({}, translation_domain) }}</option>
            {% endif %}
            {% if preferred_choices|length > 0 %}
                {% set options = preferred_choices %}
                {{ block('choice_widget_options') }}
                {% if choices|length > 0 and separator is not none %}
                    <option disabled="disabled">{{ separator }}</option>
                {% endif %}
            {% endif %}
            {% set options = choices %}
            {{ block('choice_widget_options') }}
        </select>
    {% endspaceless %}
{% endblock choice_widget_collapsed %}

{% block choice_widget_options %}
    {% spaceless %}
        {% for group_label, choice in options %}
            {% if choice is iterable %}
                <optgroup label="{{ group_label|trans({}, translation_domain) }}">
                    {% set options = choice %}
                    {{ block('choice_widget_options') }}
                </optgroup>
            {% else %}
                <option
                    value="{{ choice.value }}"
                    {% if choice is selectedchoice(value) %} selected="selected"{% endif %}
                    {% set attr = choice.attr %}
                    {% if selectpicker.subtext|default and attr.subtext|default %}
                        data-subtext="{{ attr.subtext|trans({}, translation_domain) }}"
                        {% set attr = unsetIndex(attr, 'subtext') %}
                    {% endif %}
                    {% if selectpicker.keywords|default and attr.keywords|default %}
                        data-tokens="{{ attr.keywords }}"
                        {% set attr = unsetIndex(attr, 'keywords') %}
                    {% endif %}
                    {{ block('attributes') }}
                >
                    {{ choice.label|trans({}, translation_domain) }}
                </option>
            {% endif %}
        {% endfor %}
    {% endspaceless %}
{% endblock choice_widget_options %}

{%- block bsselect_widget_attributes -%}
    {% if attr.id|default is empty %}
        id="{{ id }}" name="{{ full_name }}"
    {% endif %}
    {% if attr.name|default is empty %}
        name="{{ full_name }}"
    {% endif %}
    {%- if disabled %} disabled="disabled"{% endif -%}
    {%- if required %} required="required"{% endif -%}
    {%- for attrname, attrvalue in attr -%}
        {{- " " -}}
        {%- if attrname in ['placeholder', 'title'] -%}
            {{- attrname }}="{{ translation_domain is same as(false) ? attrvalue : attrvalue|trans({}, translation_domain) }}"
        {%- elseif attrvalue is same as(true) -%}
            {{- attrname }}="{{ attrname }}"
        {%- elseif attrvalue is not same as(false) -%}
            {{- attrname }}="{{ attrvalue }}"
        {%- endif -%}
    {%- endfor -%}
{%- endblock bsselect_widget_attributes -%}
